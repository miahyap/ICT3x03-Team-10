-- we don't know how to generate root <with-no-name> (class Root) :(
create table topics
(
	id int auto_increment
		primary key,
	uuid binary(16) not null,
	name varchar(100) not null,
	constraint topics_name_uindex
		unique (name)
);

create table users
(
	id int auto_increment
		primary key,
	uuid binary(16) not null,
	login varchar(20) not null,
	passHash binary(48) not null,
	totp binary(32) not null,
	name varchar(100) not null,
	email varchar(100) not null,
	constraint users_email_uindex
		unique (email),
	constraint users_login_uindex
		unique (login)
);

create table posts
(
	id int auto_increment
		primary key,
	uuid binary(16) not null,
	user int not null,
	topic int not null,
	content text not null,
	timePosted datetime not null,
	constraint posts_topics_id_fk
		foreign key (topic) references topics (id)
			on update cascade on delete cascade,
	constraint posts_users_id_fk
		foreign key (user) references users (id)
			on update cascade
);

create table comments
(
	id int auto_increment
		primary key,
	uuid binary(16) not null,
	post int not null,
	user int not null,
	content text not null,
	timePosted datetime not null,
	constraint comments_posts_id_fk
		foreign key (post) references posts (id)
			on update cascade on delete cascade,
	constraint comments_users_id_fk
		foreign key (user) references users (id)
			on update cascade
);

create definer = `forumx-db-admin`@`%` procedure addUser(IN in_uuid binary(16), IN in_username varchar(20), IN in_passHash binary(48), IN in_totp binary(32), IN in_email varchar(100), IN in_actName varchar(100))
begin
    insert into forumx.users(uuid, login, passHash, totp, name, email) values (in_uuid, in_username, in_passHash, in_totp, in_actName, in_email);

end;

create definer = `forumx-db-admin`@`%` procedure deletePost(IN postUUID binary(16), IN userUUID binary(16))
begin
    DECLARE postUserID int;
    select u.id into postUserID from users u where u.uuid = userUUID;
    
    delete from posts
    where posts.uuid = postUUID and posts.user = postUserID;
end;

create definer = `forumx-db-admin`@`%` procedure editPost(IN postUUID binary(16), IN userUUID binary(16), IN updatedContent text)
begin
    DECLARE postUserID int;
    select u.id into postUserID from users u where u.uuid = userUUID;
    update posts p set p.content = updatedContent where p.uuid = postUUID and postUserID = p.user;
end;

create definer = `forumx-db-admin`@`%` procedure getCommentsByPost(IN postUUID binary(16))
begin
    select c.uuid, c.content, u.login, c.timePosted from posts p, comments c, users u
    where postUUID = p.uuid and p.id = c.post and u.id = c.user;
end;

create definer = `forumx-db-admin`@`%` procedure getPostInfo(IN postUUID binary(16))
begin
    select t.name as 'topic', u.login as 'user', p.content, p.timePosted
           from posts p, users u, topics t
    where postUUID = p.uuid and t.id = p.topic and u.id = p.user;
end;

create definer = `forumx-db-admin`@`%` procedure getPostsByTopic(IN topicUUID binary(16))
begin
    select p.uuid, p.content, u.login, p.timePosted from topics t, posts p, users u
    where t.uuid = topicUUID and t.id = p.topic and u.id = p.user;
end;

create definer = `forumx-db-admin`@`%` procedure getTopics(IN topicUUID binary(16))
begin
    
    IF (topicUUID is NULL) THEN
        select t.uuid, t.name from topics t;
    else
        select t.uuid, t.name from topics t where t.uuid = topicUUID;
    end if;
    
end;

create definer = `forumx-db-admin`@`%` procedure getUser(IN in_username varchar(20))
begin
    select u.uuid, u.login, u.passHash, u.totp, u.name, u.email from forumx.users as u where login = in_username;
end;

create definer = `forumx-db-admin`@`%` procedure newPost(IN postUUID binary(16), IN userUUID binary(16), IN topicUUID binary(16), IN postContent text)
begin
    insert into posts (uuid, user, topic, content, timePosted)
     VALUES (postUUID,
             (select u.id from users u where u.uuid = userUUID),
             (select t.id from topics t where t.uuid = topicUUID),
             postContent,
             current_time);
end;

create definer = root@`%` function uuid_from_bin(b binary(16)) returns char(36)
BEGIN
  DECLARE h CHAR(32);
  SET h=HEX(b);
  RETURN CONCAT(SUBSTRING(h,7,2), SUBSTRING(h,5,2), SUBSTRING(h,3,2), SUBSTRING(h,1,2),
    '-', SUBSTRING(h,11,2), SUBSTRING(h,9,2),
    '-', SUBSTRING(h,15,2), SUBSTRING(h,13,2),
    '-', SUBSTRING(h,17,4),
    '-', SUBSTRING(h,21,12));
END;

